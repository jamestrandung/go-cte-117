// Code generated by mockery v2.14.0. DO NOT EDIT.

package cte

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockMasterPlan is an autogenerated mock type for the MasterPlan type
type MockMasterPlan struct {
	mock.Mock
}

// Execute provides a mock function with given fields: ctx
func (_m *MockMasterPlan) Execute(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// IsSequentialCTEPlan provides a mock function with given fields:
func (_m *MockMasterPlan) IsSequentialCTEPlan() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTNewMockMasterPlan interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockMasterPlan creates a new instance of MockMasterPlan. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockMasterPlan(t mockConstructorTestingTNewMockMasterPlan) *MockMasterPlan {
	mock := &MockMasterPlan{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
